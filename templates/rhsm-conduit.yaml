apiVersion: v1
kind: Template
labels:
  app: rhsm-conduit
  template: rhsm-conduit
metadata:
  annotations:
    description: An insights inventory collector for the subscription management service.
  name: rhsm-conduit

parameters:
  - name: KAFKA_BOOTSTRAP_HOST
    required: true
  - name: PINHEAD_URL
    required: true
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: KAFKA_MESSAGE_THREADS
    value: '24'
  - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
    value: '3600000'
  - name: ORG_SYNC_SCHEDULE
    value: 0 0 0 * * ?
  - name: REPLICAS
    value: '1'
  - name: IMAGE_TAG
    value: latest
  - name: MEMORY_REQUEST
    value: 100Mi
  - name: MEMORY_LIMIT
    value: 2Gi
  - name: CPU_REQUEST
    value: 200m
  - name: CPU_LIMIT
    value: '1'

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: rhsm-conduit
  spec:
    replicas: ${{REPLICAS}}
    selector:
      deploymentconfig: rhsm-conduit
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: rhsm-conduit
          prometheus: rhsm
        annotations:
          prometheus.io/path: /actuator/prometheus
          prometheus.io/port: '8080'
          prometheus.io/scrape: 'true'
      spec:
        containers:
          - image: quay.io/cloudservices/rhsm-conduit:${IMAGE_TAG}
            name: rhsm-conduit
            env:
              - name: JAVA_MAX_MEM_RATIO
                value: '85'
              - name: GC_MAX_METASPACE_SIZE
                value: '256'
              - name: TASK_QUEUE_TYPE
                value: kafka
              - name: LOGGING_LEVEL_ROOT
                value: ${LOGGING_LEVEL_ROOT}
              - name: LOGGING_LEVEL_ORG_CANDLEPIN
                value: ${LOGGING_LEVEL}
              - name: PINHEAD_URL
                value: ${PINHEAD_URL}
              - name: ORG_SYNC_SCHEDULE
                value: ${ORG_SYNC_SCHEDULE}
              - name: KAFKA_BOOTSTRAP_HOST
                value: ${KAFKA_BOOTSTRAP_HOST}
              - name: KAFKA_MESSAGE_THREADS
                value: ${KAFKA_MESSAGE_THREADS}
              - name: KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS
                value: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
              - name: DATABASE_HOST
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.host
              - name: DATABASE_PORT
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.port
              - name: DATABASE_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.user
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.password
              - name: DATABASE_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.name
              - name: PINHEAD_KEYSTORE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: tls
                    key: keystore_password
              - name: PINHEAD_KEYSTORE
                value: /pinhead/keystore.jks
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /actuator/health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 45
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 10
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /actuator/health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 45
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 10
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
            ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8778
                name: jolokia
                protocol: TCP
            volumeMounts:
              - name: pinhead
                mountPath: /pinhead
            workingDir: /
        volumes:
          - name: pinhead
            secret:
              secretName: pinhead
        restartPolicy: Always
        terminationGracePeriodSeconds: 75
        imagePullSecrets:
          - name: quay-cloudservices-pull
    triggers:
      - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    name: rhsm-conduit
    labels:
      prometheus: rhsm
  spec:
    ports:
      - port: 8080
        name: "8080"
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: rhsm-conduit
