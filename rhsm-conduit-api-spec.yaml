openapi: "3.0.2"
info:
  title: RHSM Inventory
  description: 
  version: 1.0.0
  license:
    name: MIT
servers:
  - url: http://candlepinproject.org
paths:
  /inventory/{orgId}:
    get:
      summary: Fetch the inventory data for an organization without pushing to the inventory.
      operationId: getInventoryForOrg
      tags:
        - inventory
      parameters:
        - name: orgId
          in: path
          required: true
          description: The ID of the target organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgInventory"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Push the inventory data for an organization into the unified inventory store.
      operationId: updateInventoryForOrg
      tags:
        - inventory
      parameters:
        - name: orgId
          in: path
          required: true
          description: The ID of the target organization
          schema:
            type: string
      responses:
        # Could be 202 Accepted if we go async.
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                # TODO This should be empty or a message.
                $ref: "#/components/schemas/OrgInventory"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status:
    get:
      summary: Get the status of the service
      operationId: getStatus
      tags:
        - status
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    ConsumerInventory:
      # The properties list here will depend on what is returned
      # from the IT endpoint.
      required:
        - id
        # TODO Add more
      properties:
        id:
          type: integer
          format: int64
        # TODO Add more
    OrgInventory:
      properties:
        consumerInventories:
          type: array
          items:
            $ref: "#/components/schemas/ConsumerInventory"
    Status:
      required:
        - version
      properties:
        version:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

      
