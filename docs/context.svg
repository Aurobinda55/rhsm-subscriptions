<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="586px" preserveAspectRatio="none" style="width:422px;height:586px;background:#000000;" version="1.1" viewBox="0 0 422 586" width="422px" zoomAndPan="magnify"><defs/><g><rect fill="#072415" height="1" style="stroke:#072415;stroke-width:1.0;" width="1" x="0" y="0"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="135" x="5" y="17">PlantUML 1.2021.00</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="30.9688"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="399" x="5" y="44.9375">&lt;b&gt;This version of PlantUML is 383 days old, so you should</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="408" x="5" y="58.9063">&lt;b&gt;consider upgrading from https://plantuml.com/download</text><rect fill="#33FF02" height="21.2969" style="stroke:#33FF02;stroke-width:1.0;" width="293" x="5" y="68.875"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="225" x="6" y="83.875">[From context.puml (line 8) ]</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="104.1719"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="79" x="5" y="120.4688">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="136.7656"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="153.0625"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="169.3594"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="185.6563"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="15" x="5" y="201.9531">...</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="185" x="5" y="218.25">... ( skipping 313 lines )</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="15" x="5" y="234.5469">...</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="250.8438"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="267.1406"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="283.4375"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="299.7344"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="316.0313"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="332.3281"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="348.625"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="364.9219"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="381.2188"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="397.5156"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="413.8125"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="430.1094"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="446.4063"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="462.7031"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="479"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="495.2969"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="511.5938"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="293" x="5" y="527.8906">skinparam backgroundColor #FEFEFE</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="544.1875"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="213" x="5" y="560.4844">SHOW_PERSON_PORTRAIT()</text><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="106" x="10" y="576.7813">Syntax Error?</text><!--MD5=[bea9588dbb3b452f19025bd07ca0c9e8]
@startuml
!include <C4/C4_Context>
!include <C4/C4>

' see https://forum.plantuml.net/8356/white-backgrounds-are-rendered-transparent-in-svg
skinparam backgroundColor #FEFEFE

SHOW_PERSON_PORTRAIT()
LAYOUT_WITH_LEGEND()

Person(customer, "Red Hat Customer")

title System Context diagram for Subscription watch

Boundary(swatch, "Susbscription watch") {
  System(ui, "Subscription watch UI", "Customer facing views of the usage and capacity data.")
  System(api, "Subscription watch API", "Customer facing API.")
  System(metrics_ingress, "Metrics Ingress", "Services that sync system/instance telemetry data into Subscription watch.")
  System(cloudigrade, "Cloudigrade (aka. Cloudmeter)", "Service that provides precise RHEL instance lifetime data.")
  System(tally, "Tally", "Service that tallies system usage based on telemetry data from various sources.")
  System(subscription_sync, "Subscription Sync", "Service that syncs subscription/offering data from RH IT services.")
  System(billing_producers, "Billing Producers", "Services that notify billing services of hourly usage.")
}

System(system_conduit, "System Conduit (aka. rhsm-conduit)", " Service that syncs system data from Hosted Candlepin to HBI.")

System_Ext(customer_system, "Customer System", "Customer system or service instance (e.g. RHEL or OSD instance).")
System_Ext(observatorium, "Observatorium", "Prometheus/Thanos based service for RH product telemetry.")
System_Ext(candlepin, "Hosted Candlepin", "Entitlement/Registration service (subscription.rhsm.redhat.com).")
System_Ext(cloud_provider, "Cloud Provider Telemetry", "Telemetry collected by cloud providers.")
System_Ext(hbi, "Host Based Inventory", "Central datastore for system information for console.redhat.com.")
System_Ext(rhit_subscriptions, "RH IT Subscription Service", "The internal RH Subscription API.")
System_Ext(rhit_product, "RH IT Product Service", "The internal RH Product API which contains Offering definitions.")
System_Ext(billing_services, "Billing Services", "Services responsible for billing the customer for PAYG usage.")

Rel(customer, ui, "Uses")
Rel(customer, api, "Uses")
Rel(customer, customer_system, "Provisions/Uses")
Rel(customer_system, candlepin, "Reports to", "subscription-manager")
Rel(customer_system, observatorium, "Reports to", "Prometheus")
Rel(customer_system, hbi, "Reports to", "insights-client")
Rel(system_conduit, hbi, "Reports to")
Rel_Neighbor(system_conduit, candlepin, "Syncs from")
Rel_Neighbor(ui, api, "Uses")
Rel(customer_system, cloud_provider, "Reports to")
Rel_Back(observatorium, metrics_ingress, "Syncs from")
Rel_Back(hbi, tally, "Reads from")
Rel_Back(cloud_provider, cloudigrade, "Reads from")
Rel_Neighbor(tally, cloudigrade, "Reads from")
Rel_Back(rhit_subscriptions, subscription_sync, "Syncs from")
Rel_Back(rhit_product, subscription_sync, "Syncs from")
Rel(billing_producers, billing_services, "Reports to")
@enduml

@startuml














skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam LegendBorderColor transparent
skinparam LegendBackgroundColor transparent
skinparam LegendFontColor #FFFFFF

skinparam shadowing<<legendArea>> false
skinparam rectangle<<legendArea>> {
    backgroundcolor #00000000
    bordercolor #00000000
}

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam queue {
    StereotypeFontSize 12
    shadowing false
}

skinparam arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam actor {
    StereotypeFontSize 12
    shadowing false
    style awesome
}

skinparam person {
    StereotypeFontSize 12
    shadowing false
}

skinparam package {
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontStyle plain
    BackgroundColor transparent
}

skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontColor #444444
    BorderColor #444444
    BackgroundColor transparent
    BorderStyle dashed
}





































































































skinparam rectangle<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}

skinparam rectangle<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}

skinparam rectangle<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}

skinparam rectangle<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}

sprite $person [48x48/16] {
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
000000000000025788300000000005886410000000000000
000000000007DFFFFFFD9643347BFFFFFFFB400000000000
0000000004EFFFFFFFFFFFFFFFFFFFFFFFFFFB1000000000
000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFD200000000
00000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE10000000
0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB0000000
000000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5000000
000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD000000
000009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF200000
00000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF600000
00000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00000EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF700000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
0000008FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3000000
000000014555555555555555555555555555555300000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
}
















skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam LegendBorderColor transparent
skinparam LegendBackgroundColor transparent
skinparam LegendFontColor #FFFFFF

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam queue {
    StereotypeFontSize 12
    shadowing false
}

skinparam Arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #444444
    BorderColor #444444
    BorderStyle dashed
}

























skinparam backgroundColor #FEFEFE

SHOW_PERSON_PORTRAIT()
hide stereotype
legend right
|<color:#000000>**Legend**</color> |
|<#08427B> person |
|<#1168BD> system|
|<#686868> external person |
|<#999999> external system |
endlegend

rectangle "<$person>\n==Red Hat Customer" <<person>> as customer

title System Context diagram for Subscription watch

rectangle "==Susbscription watch" <<boundary>> as swatch {
  rectangle "==Subscription watch UI\n\n Customer facing views of the usage and capacity data." <<system>> as ui
  rectangle "==Subscription watch API\n\n Customer facing API." <<system>> as api
  rectangle "==Metrics Ingress\n\n Services that sync system/instance telemetry data into Subscription watch." <<system>> as metrics_ingress
  rectangle "==Cloudigrade (aka. Cloudmeter)\n\n Service that provides precise RHEL instance lifetime data." <<system>> as cloudigrade
  rectangle "==Tally\n\n Service that tallies system usage based on telemetry data from various sources." <<system>> as tally
  rectangle "==Subscription Sync\n\n Service that syncs subscription/offering data from RH IT services." <<system>> as subscription_sync
  rectangle "==Billing Producers\n\n Services that notify billing services of hourly usage." <<system>> as billing_producers
}

rectangle "==System Conduit (aka. rhsm-conduit)\n\n  Service that syncs system data from Hosted Candlepin to HBI." <<system>> as system_conduit

rectangle "==Customer System\n\n Customer system or service instance (e.g. RHEL or OSD instance)." <<external_system>> as customer_system
rectangle "==Observatorium\n\n Prometheus/Thanos based service for RH product telemetry." <<external_system>> as observatorium
rectangle "==Hosted Candlepin\n\n Entitlement/Registration service (subscription.rhsm.redhat.com)." <<external_system>> as candlepin
rectangle "==Cloud Provider Telemetry\n\n Telemetry collected by cloud providers." <<external_system>> as cloud_provider
rectangle "==Host Based Inventory\n\n Central datastore for system information for console.redhat.com." <<external_system>> as hbi
rectangle "==RH IT Subscription Service\n\n The internal RH Subscription API." <<external_system>> as rhit_subscriptions
rectangle "==RH IT Product Service\n\n The internal RH Product API which contains Offering definitions." <<external_system>> as rhit_product
rectangle "==Billing Services\n\n Services responsible for billing the customer for PAYG usage." <<external_system>> as billing_services

customer - ->> ui : **Uses**
customer - ->> api : **Uses**
customer - ->> customer_system : **Provisions/Uses**
customer_system - ->> candlepin : **Reports to**\n//<size:12>[subscription-manager]</size>//
customer_system - ->> observatorium : **Reports to**\n//<size:12>[Prometheus]</size>//
customer_system - ->> hbi : **Reports to**\n//<size:12>[insights-client]</size>//
system_conduit - ->> hbi : **Reports to**
system_conduit ->> candlepin : **Syncs from**
ui ->> api : **Uses**
customer_system - ->> cloud_provider : **Reports to**
observatorium <<- - metrics_ingress : **Syncs from**
hbi <<- - tally : **Reads from**
cloud_provider <<- - cloudigrade : **Reads from**
tally ->> cloudigrade : **Reads from**
rhit_subscriptions <<- - subscription_sync : **Syncs from**
rhit_product <<- - subscription_sync : **Syncs from**
billing_producers - ->> billing_services : **Reports to**
@enduml

PlantUML version 1.2021.00(Sun Jan 10 10:25:05 UTC 2021)
(LGPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>