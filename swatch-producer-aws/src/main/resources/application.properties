DB_HOST=${clowder.database.hostname:localhost}
DB_PORT=${clowder.database.port:5432}
DB_NAME=${clowder.database.name:rhsm-subscriptions}
DB_USER=${clowder.database.username:rhsm-subscriptions}
DB_PASSWORD=${clowder.database.password:rhsm-subscriptions}
SERVER_PORT=${clowder.endpoints.swatch-billing-provider-aws.port:8000}
SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://${clowder.endpoints.capacity-ingress.hostname}:${clowder.endpoints.capacity-ingress.port}
AWS_REGION=us-east-1
AWS_MANUAL_SUBMISSION_ENABLED=false
AWS_SEND_RETRIES=0
AWS_USAGE_CONTEXT_LOOKUP_RETRIES=0
AWS_MARKETPLACE_ENDPOINT_OVERRIDE=false

# dev-specific defaults; these can still be overridden by env var
%dev.AWS_CREDENTIALS_JSON=[{"accessKeyId":"accessKey","secretAccessKey":"placeholder","sellerAccount":"awsSellerAccountId"}]
%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://localhost:8101/subscriptions/
%dev.AWS_MARKETPLACE_ENDPOINT_URL=http://localhost:8101/aws-marketplace/
%dev.AWS_MARKETPLACE_ENDPOINT_OVERRIDE=true
%dev.AWS_MANUAL_SUBMISSION_ENABLED=true

# set the test profile properties to the same values as dev; these get activated for @QuarkusTest
%test.AWS_CREDENTIALS_JSON=${%dev.AWS_CREDENTIALS_JSON}
%test.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=${%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}
%test.AWS_MARKETPLACE_ENDPOINT_URL=${%dev.AWS_MARKETPLACE_ENDPOINT_URL}
%test.AWS_MARKETPLACE_ENDPOINT_OVERRIDE=${%dev.AWS_MARKETPLACE_ENDPOINT_OVERRIDE}
%test.AWS_MANUAL_SUBMISSION_ENABLED=${%dev.AWS_MANUAL_SUBMISSION_ENABLED}

# dev-specific config items that don't need to be overridden via env var
# do not use JSON logs in dev mode
%dev.quarkus.log.console.json=false
%dev.quarkus.log.category."com.redhat.swatch".level=DEBUG

quarkus.http.port=${SERVER_PORT}
# make quarkus choose a dynamic port for testing to avoid port collisions w/ simultaneous tests
quarkus.http.test-port=0

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER}
quarkus.datasource.password=${DB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
quarkus.datasource.jdbc.max-size=16

#clowder quarkus config takes care of setting these, no need to try to do clowder.kafka.brokers[0]

# Common kafka settings
kafka.bootstrap.servers=localhost:9092
quarkus.reactive-messaging.kafka.serializer-generation.enabled=false

# Consumer settings
# Go back to the first records, if it's our first access
mp.messaging.incoming.tally-in.connector=smallrye-kafka
mp.messaging.incoming.tally-in.topic=platform.rhsm-subscriptions.tally
mp.messaging.incoming.tally-in.auto.offset.reset = earliest

# Producer settings
mp.messaging.outgoing.tally-out.connector=smallrye-kafka
mp.messaging.outgoing.tally-out.topic=platform.rhsm-subscriptions.tally

quarkus.rest-client."com.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".url=${SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}
com.redhat.swatch.processors.TallyTopicProcessor/lookupAwsUsageContext/Retry/maxRetries=${AWS_USAGE_CONTEXT_LOOKUP_RETRIES}
com.redhat.swatch.processors.TallyTopicProcessor/send/Retry/maxRetries=${AWS_SEND_RETRIES}
