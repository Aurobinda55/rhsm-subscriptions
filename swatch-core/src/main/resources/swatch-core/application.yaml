# This file defines properties that are common to all swatch services.
# import via:
# spring:
#   config:
#     import: classpath:swatch-core/application.yaml

# Variables derived from Clowder should have their defaults defined here. Failure to do so will
# result in an exception at start-up when the clowder property cannot be successfully resolved.
# The values can still be overridden using environment variables as they have a higher precedence
# than the defaults defined here.
KAFKA_BOOTSTRAP_HOST: ${clowder.kafka.brokers[0].hostname:localhost}
KAFKA_BOOTSTRAP_PORT: ${clowder.kafka.brokers[0].port:9092}

SERVER_PORT: ${clowder.publicPort:8000}

JMX_ENABLED: true
JDBC_BATCH_SIZE: 100
KAFKA_MESSAGE_THREADS: 1
KAFKA_IDLE_EVENT_INTERVAL: 5s
KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS: 1800000
KAFKA_CONSUMER_RECONNECT_BACKOFF_MS: 2000
KAFKA_CONSUMER_RECONNECT_BACKOFF_MAX_MS: 10000
KAFKA_API_RECONNECT_TIMEOUT_MS: 480000

HAWTIO_DISABLE_PROXY: true
HAWTIO_AUTHENTICATION_ENABLED: false
HAWTIO_PROXY_ALLOWLIST: localhost,127.0.0.1
HAWTIO_LOCAL_ADDRESS_PROBING: true
HAWTIO_BASE_PATH:

DEV_MODE: false
PATH_PREFIX: api
APP_NAME: rhsm-subscriptions

DATABASE_HOST: localhost
DATABASE_PORT: 5432
DATABASE_DATABASE: rhsm-subscriptions
DATABASE_SSL_MODE: disable
DATABASE_SSL_CERT: /dev/null
DATABASE_USERNAME: rhsm-subscriptions
DATABASE_PASSWORD: rhsm-subscriptions
DATABASE_CONNECTION_TIMEOUT_MS: 30000
DATABASE_MAX_POOL_SIZE: 10

server:
  port: ${SERVER_PORT}

management:
  endpoints:
    web:
      exposure:
        include:
          - hawtio
          - health
          - info
          - jolokia
          - prometheus
  endpoint:
    shutdown:
      enabled: true
    prometheus:
      enabled: true

spring:
  jmx:
    enabled: ${JMX_ENABLED}
  # general hibernate configurations
  jpa:
    properties:
      hibernate:
        jdbc:
          batch_size: ${JDBC_BATCH_SIZE}
        order_inserts: true
        order_updates: true
  liquibase:
    change-log: classpath:/liquibase/changelog.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}
    listener:
      # The number of threads that will be processing messages (should match
      # the number of partitions on the queue)
      concurrency: ${KAFKA_MESSAGE_THREADS}
      idle-event-interval: ${KAFKA_IDLE_EVENT_INTERVAL}
    consumer:
      properties:
        # Required kafka defaults
        max.poll.interval.ms: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS}
        reconnect.backoff.ms: ${KAFKA_CONSUMER_RECONNECT_BACKOFF_MS}
        reconnect.backoff.max.ms: ${KAFKA_CONSUMER_RECONNECT_BACKOFF_MAX_MS}
        default.api.timeout.ms: ${KAFKA_API_RECONNECT_TIMEOUT_MS}
      # if no offset commit exists yet, set to earliest
      auto-offset-reset: earliest
      max-poll-records: 1

# See https://hawt.io/docs/configuration/ for details on built-in hawtio config
hawtio:
  # disable the remote connection tab, we do not need it
  disableProxy: ${HAWTIO_DISABLE_PROXY}
  authenticationEnabled: ${HAWTIO_AUTHENTICATION_ENABLED}
  proxyAllowlist: ${HAWTIO_PROXY_ALLOWLIST}
  localAddressProbing: ${HAWTIO_LOCAL_ADDRESS_PROBING}
  # Base path override for reverse proxy support
  hawtio-base-path: ${HAWTIO_BASE_PATH}

rhsm-subscriptions:
  security:
    dev-mode: ${DEV_MODE}
  package_uri_mappings:
    # this mapping required here because it is used by our SecurityConfig, which is shared
    org.candlepin.subscriptions.resteasy: ${PATH_PREFIX}/${APP_NAME}/v1
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}?reWriteBatchedInserts=true&stringtype=unspecified&sslmode=${DATABASE_SSL_MODE}&sslrootcert=${DATABASE_SSL_CERT}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    platform: postgresql
    hikari:
      connection-timeout: ${DATABASE_CONNECTION_TIMEOUT_MS}
      maximum-pool-size: ${DATABASE_MAX_POOL_SIZE}
  product-profile:
    product-profile-registry-resource-location: classpath:product_profile_registry.yaml
  product:
    useStub: ${PRODUCT_USE_STUB:false}
    url: ${PRODUCT_URL:https://product.qa.api.redhat.com/svcrest/product/v3}
    keystore: file:${PRODUCT_KEYSTORE:}
    keystorePassword: ${PRODUCT_KEYSTORE_PASSWORD:redhat}
    maxConnections: ${PRODUCT_MAX_CONNECTIONS:100}
    tasks:
      topic: platform.rhsm-subscriptions.offering-sync
      kafka-group-id: offering-worker
  clowder:
    json-resource-location: file:/cdapp/cdappconfig.json
    strict-loading: true
